version: 2.1

description: |
  Build and push Docker images to container registries

examples:
  standard_build_and_push:
    description: |
      Build from Dockerfile, and push to registry
    usage:
      version: 2.1
      orbs:
        docker: zachchai/docker@0.1.0
      workflows:
        build_and_push:
          jobs:
            - build_push

jobs:
  build_push:
    description: Build and optionally push Docker image
    executor: default
    parameters:
      registry:
        description: Name of registry to use
        type: string
        default: docker.io
      image:
        description: Name of image
        type: string
        default: $DOCKER_LOGIN/$CIRCLE_PROJECT_REPONAME
      tag:
        description: Tag of image
        type: string
        default: $CIRCLE_SHA1
      dockerfile:
        description: Name of dockerfile to use
        type: string
        default: Dockerfile
      path:
        description: Path to the directory containing your Dockerfile and build context
        type: string
        default: .
      extra_build_args:
        description: Extra flags to pass to docker build
        type: string
        default: ''
      push:
        description: Push image to registry
        type: boolean
        default: true
    steps:
      - checkout
      - setup_remote_docker
      - when:
          condition: <<parameters.push>>
          steps:
            - login:
                registry: << parameters.registry >>
      - build:
          registry: << parameters.registry >>
          image: << parameters.image >>
          tag: << parameters.tag >>
          dockerfile: << parameters.dockerfile >>
          path: << parameters.path >>
          extra_build_args: << parameters.extra_build_args >>
      - when:
          condition: <<parameters.push>>
          steps:
            - push:
                registry: << parameters.registry >>
                image: << parameters.image >>
                tag: << parameters.tag >>

commands:
  login:
    description: |
      Docker login. Set $DOCKER_LOGIN and $DOCKER_PASSWORD environment variables
    parameters:
      registry:
        description: Name of registry to use
        type: string
        default: docker.io
      user:
        description: Docker user for login
        type: string
        default: $DOCKER_LOGIN
      password:
        description: Docker password for login
        type: string
        default: $DOCKER_PASSWORD
    steps:
      - run:
          name: Docker login
          command: |
            echo << parameters.password >> | \
            docker login --password-stdin -u << parameters.user >> << parameters.registry >>
  build:
    description: Builds and Tags a Docker Image.
    parameters:
      registry:
        description: Name of registry to use
        type: string
        default: docker.io
      image:
        description: Name of image to create
        type: string
        default: $DOCKER_LOGIN/$CIRCLE_PROJECT_REPONAME
      tag:
        description: Tag for created image
        type: string
        default: $CIRCLE_SHA1
      dockerfile:
        description: Name of dockerfile to use
        type: string
        default: Dockerfile
      path:
        description: Path to the directory containing your Dockerfile and build context
        type: string
        default: .
      extra_build_args:
        description: Extra flags to pass to docker build
        type: string
        default: ''
    steps:
      - run:
          name: Build Docker Image
          command: |
            docker build \
              << parameters.extra_build_args >> \
              -f << parameters.dockerfile >> \
              -t << parameters.registry >>/<< parameters.image >>:<< parameters.tag >> \
              << parameters.path >>
  pull:
    description: Pulls a Docker image
    parameters:
      registry:
        description: Name of registry to use
        type: string
        default: docker.io
      image:
        description: Name of image to pull
        type: string
        default: $DOCKER_LOGIN/$CIRCLE_PROJECT_REPONAME
      tag:
        description: Tag of image to pull
        type: string
        default: $CIRCLE_SHA1
    steps:
      - run:
          name: Pull Docker Image
          command: docker pull << parameters.registry >>/<< parameters.image >>:<< parameters.tag >>
  push:
    description: Pushes a Docker image
    parameters:
      registry:
        description: Name of registry to use
        type: string
        default: docker.io
      image:
        description: Name of image to push
        type: string
        default: $DOCKER_LOGIN/$CIRCLE_PROJECT_REPONAME
      tag:
        description: Tag of image to push
        type: string
        default: $CIRCLE_SHA1
    steps:
      - run:
          name: Push Docker image
          command: |
            if [[ $CIRCLE_NODE_INDEX == 0 ]]; then
              docker push << parameters.registry >>/<< parameters.image >>:<< parameters.tag >>
            fi

executors:
  default:
    parameters:
      tag:
        description: Tag for docker image
        type: string
        default: stable-git
    docker:
      - image: docker:<< parameters.tag >>
